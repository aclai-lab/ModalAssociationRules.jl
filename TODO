Organization:
  ✔ define Item, Itemset and its interface @done(24-01-15 16:16)
    # getters, setters, merge method
  ✔ define meaningfulness measures in an extensible way @done(24-01-15 16:16)
    # local and global support, confidence and write tests
  ✔ uniform algorithms interface (apply) @done(24-01-16 13:54)
  ✔ think about which parameters are needed and how they can be customized @done(24-01-16 13:54)
    # maybe a configuration structure with an array of local measures?
    # also, each measure can be activated locally or globally
    # localdict{string(local measure) -> counter} # if local measure is given
    # globldict{string(local measure) -> counter} # if local measure is given with globality on
  ☐ write an initial apriori implementation
  ☐ write an initial fpgrowth implementation

Generic:
  ☐ global memoization should check if memoized treshold is larger than requested one

Utility:
  # all the following should be moved out ot SoleModels
  ✔ consider feature when binning @done(24-02-02 15:52)
  ☐ organize the alphabet generation system
  ☐ find out how to extract interesting literals from which mine association rules.

Testing:
  ☐ in test section, invoke SoleLogics kripke models generation
    ✔ write SoleLogics kripke models generation @done(23-12-20 18:34)
  ☐ prepare an array of frequent literals (both locally and globally)
  ☐ test the initial apriori implementation (see organization section)
  ☐ test the initial fpgrowth implementation (generated rules must be the same as in apriori)